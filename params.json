{
  "name": "Brick-tool.GitHub.io",
  "tagline": "Bounded Reachability Checker of Numerical-Intensive C Code",
  "body": "### Introduction\r\nBRICK is a bounded reachability checker for numericallyintensive C code, with special emphasis on handling nonlinear operations. It supports user-speciﬁed safety speciﬁcation checking as well as built-in assertion and domain error checking. Diﬀerent from the existing tools, BRICK supports the checking of codes with nonlinear operations. e.g. trigonometric functions, exponential functions by delta-decision SMT solver dReal. At the same time, BRICK supports inter-procedural analysis, and analysis of complex structures including arrays, structs, and pointer registers. BRICK has scaled well on realistic programs in evaluation, e.g. for debugging the GNU Scientiﬁc Library (GSL).\r\n\r\n### Benchmark\r\nWe evaluate BRICK on functions of the GNU scientiﬁc library (GSL), which is a mature and widely-used numerically-intensive scientiﬁc library. Furthermore, we locate one similar projects Numerical Algorithms in ALGOL (NUMAL) library in C in github. \r\n\r\n### Building Instruction\r\nThe functionalities of BRICK are shown from the following command in the standard unix command-line style: BRICK < filename > -f < func > -b < bound > -p < precision > [-options].\r\n - a : set the mode of BRICK to check assertion statement only. \r\n - d : set the mode of BRICK to check the domain error only. \r\n - l : present the target statement position of the user-speciﬁed property. \r\n - s : specify the numerical expression formula in the user-speciﬁed property \r\n - t : set the mode of BRICK to check all the objectives including assertion, domain error and user-speciﬁed property.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}