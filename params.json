{
  "name": "Brick-tool.GitHub.io",
  "tagline": "Bounded Reachability Checker of Numerical-Intensive C Code",
  "body": "### Introduction\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here [using GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/), select a template crafted by a designer, and publish. After your page is generated, you can check out the new `gh-pages` branch locally. If you’re using GitHub Desktop, simply sync your repository and you’ll see the new branch.\r\n\r\n### Benchmark\r\nWe evaluate BRICK on functions of the GNU scientiﬁc library (GSL), which is a mature and widely-used numerically-intensive scientiﬁc library. Furthermore, we locate one similar projects Numerical Algorithms in ALGOL (NUMAL) library in C in github. \r\n\r\n### Building Instruction\r\nThe functionalities of BRICK are shown from the following command in the standard unix command-line style: BRICK < filename > -f < func > -b < bound > -p < precision > [-options]. In this command, < filename > indicates the directory of the source code ﬁle, while < func > indicates the entry function needed to check. BRICK checks the function call hierarchy automatically and builds the inter-procedual CFG starting from this speciﬁc function. < bound > declares the depth of the searching on the CFG. Finally, < precision > declares the user-speciﬁed numerically error bound δ. The other options of BRICK include follows3.\r\n- a : set the mode of BRICK to check assertion statement only. - d : set the mode of BRICK to check the domain error only. - l : present the target statement position of the user-speciﬁed property. - s : specify the numerical expression formula in the user-speciﬁed property - t : set the mode of BRICK to check all the objectives including assertion, domain error and user-speciﬁed property.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}